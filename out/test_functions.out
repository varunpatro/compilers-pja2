Parsing...
Tests/test_functions.j
======= IR3 Program =======

======= CData3 ======= 

class Main{
}

class Compute{
  Int chachedValue;
  Bool computedSquares;
}

=======  CMtd3 ======= 

void main(Main this){
  Int a;
  Int b;
  Int i;
  Int d;
  Int t1;
  Int t2;
  Compute help;
  Int _t1;
  Int _t2;
  Bool _t3;
  a=1;
  b=2;
  i=3;
  d=4;
  help=new Compute();
  _t1=[Compute_2(help,a,b)];
  _t2=[Compute_0(help,i)];
  t1=[_t1,_t2](+);
  t2=[Compute_0(help,d)];
  _t3=[t2,t1](>);
  If(_t3) goto 1;
    goto 2;
Label 1:
  println("Square of d larger than sum of squares");
    goto 3;
Label 2:
  println("Square of d larger than sum of squares");
    goto 3;
Label 3:
  t1=[Compute_3(help,4)];
  println("\nFactorial of:");
  println(4);
  println(" equal to:");
  println(t1);
  println("\n");
}

Int Compute_0(Compute this,Int a){
  Int _t4;
  _t4=[a,a](*);
  Return _t4;
}

Int Compute_1(Compute this,Int a,Int b){
  Int _t5;
  _t5=[a,b](+);
  Return _t5;
}

Int Compute_2(Compute this,Int a,Int b){
  Bool _t6;
  Int _t7;
  Int _t8;
  Int _t9;
  Int _t10;
  _t6=this.computedSquares;
  If(_t6) goto 4;
    goto 5;
Label 4:
  _t7=this.chachedValue;
  Return _t7;
    goto 6;
Label 5:
  this.computedSquares=true;
  _t8=[Compute_0(this,a)];
  _t9=[Compute_0(this,b)];
  _t10=[Compute_1(this,_t8,_t9)];
  Return _t10;
    goto 6;
Label 6:
}

Int Compute_3(Compute this,Int num){
  Int num_aux;
  Bool _t11;
  Int _t12;
  Int _t13;
  _t11=[num,1](<);
  If(_t11) goto 7;
    goto 8;
Label 7:
  num_aux=1;
  Return num_aux;
    goto 9;
Label 8:
  _t12=[num,1](-);
  _t13=[Compute_3(this,_t12)];
  num_aux=[num,_t13](*);
  Return num_aux;
    goto 9;
Label 9:
}

======= End of IR3 Program =======

